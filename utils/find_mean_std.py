import numpy as np

# Example lists of train losses
losses1 = [2.2910830974578857, 2.2897377014160156, 2.2609944343566895, 2.2057719230651855, 2.29162859916687, 2.244063138961792, 2.19364333152771, 2.2397732734680176, 2.291736602783203, 2.250657320022583, 2.224435567855835, 2.2800519466400146, 2.2585041522979736, 2.1905858516693115, 2.3011887073516846, 2.234828472137451, 2.2627909183502197, 2.275582790374756, 2.2525627613067627, 2.200941801071167, 2.2052550315856934, 2.2015669345855713, 2.1847774982452393, 2.2095489501953125, 2.252734422683716, 2.24586820602417, 2.26654314994812, 2.150890588760376, 2.2839319705963135, 2.2082388401031494, 2.26997447013855, 2.209702491760254, 2.2428081035614014, 2.2233707904815674, 2.229566812515259, 2.2540600299835205, 2.2274248600006104, 2.2778971195220947, 2.188760995864868, 2.24649715423584, 2.2262537479400635, 2.2307589054107666, 2.2455530166625977, 2.2812111377716064, 2.185969829559326, 2.1994049549102783, 2.2623586654663086, 2.2689456939697266, 2.205198049545288, 2.2245748043060303, 2.2468960285186768, 2.1831252574920654, 2.2483808994293213, 2.233853340148926, 2.2248551845550537, 2.2571609020233154, 2.3346328735351562, 2.2595744132995605, 2.2077183723449707, 2.2053909301757812, 2.2748074531555176, 2.2302777767181396, 2.3156611919403076, 2.267418384552002, 2.2084619998931885, 2.2717721462249756, 2.2796707153320312, 2.23540997505188, 2.183054208755493, 2.2220821380615234, 2.1807613372802734, 2.2246408462524414, 2.2701785564422607, 2.269866943359375]

losses2 =  [2.3171463012695312, 2.2871599197387695, 2.2589211463928223, 2.2069802284240723, 2.2917964458465576, 2.243898630142212, 2.1936089992523193, 2.2397849559783936, 2.2917661666870117, 2.25069522857666, 2.2244298458099365, 2.280052661895752, 2.258481025695801, 2.190558433532715, 2.3012945652008057, 2.2348244190216064, 2.2627346515655518, 2.2755541801452637, 2.252558708190918, 2.200894594192505, 2.2053275108337402, 2.201601266860962, 2.1847195625305176, 2.209503412246704, 2.2527403831481934, 2.245861291885376, 2.2665748596191406, 2.150853395462036, 2.2838833332061768, 2.208137035369873, 2.2699451446533203, 2.2096524238586426, 2.2427761554718018, 2.2233474254608154, 2.229565143585205, 2.254045009613037, 2.227393865585327, 2.2779130935668945, 2.188735008239746, 2.2465009689331055, 2.226264715194702, 2.230816602706909, 2.2455461025238037, 2.28121018409729, 2.186025857925415, 2.1993374824523926, 2.2623581886291504, 2.2689216136932373, 2.2051846981048584, 2.2245559692382812, 2.2468836307525635, 2.183142900466919, 2.248349666595459, 2.2338826656341553, 2.2248568534851074, 2.2571539878845215, 2.334608554840088, 2.2595722675323486, 2.207717180252075, 2.205397844314575, 2.2748119831085205, 2.2302656173706055]

losses3 = [2.3083701133728027, 2.2808704376220703, 2.267299175262451, 2.206937551498413, 2.290961503982544, 2.2435379028320312, 2.193664789199829, 2.239760637283325, 2.291757822036743, 2.2506494522094727, 2.224421262741089, 2.2800872325897217, 2.2585179805755615, 2.190629243850708, 2.301222562789917, 2.2348361015319824, 2.2627620697021484, 2.2755720615386963, 2.2525341510772705, 2.200932502746582, 2.205287456512451, 2.2015914916992188, 2.1847589015960693, 2.209523916244507, 2.2527389526367188, 2.2458903789520264, 2.2665481567382812, 2.150869607925415, 2.283884048461914, 2.208155393600464, 2.2700040340423584, 2.2096760272979736, 2.2428054809570312, 2.2233805656433105, 2.229569911956787, 2.2540502548217773, 2.227416753768921, 2.277888774871826, 2.1887362003326416, 2.2465057373046875, 2.2262792587280273, 2.230800151824951, 2.245535373687744, 2.28120493888855, 2.1859946250915527, 2.199366807937622, 2.2623698711395264, 2.268918037414551, 2.205207347869873, 2.2245566844940186, 2.2468979358673096, 2.1831297874450684, 2.248384952545166, 2.2338738441467285, 2.224860191345215, 2.2571544647216797, 2.334594488143921, 2.259587287902832, 2.207720994949341, 2.2053983211517334, 2.27479887008667, 2.2302708625793457, 2.3156566619873047, 2.267418146133423, 2.2084615230560303, 2.2717764377593994, 2.2796661853790283, 2.235407590866089, 2.1830551624298096, 2.2220780849456787, 2.1807639598846436, 2.224642038345337, 2.2701778411865234, 2.269867420196533, 2.269334077835083, 2.2493228912353516, 2.194532632827759, 2.2752060890197754, 2.2221245765686035]
all_losses = [losses1, losses2, losses3]

# Find the minimum value in each list
mins = [min(losses) for losses in all_losses]

val1 = 0.7124
val2 = 0.7177
val3 = 0.7132

print(f"mean: {np.mean([val1,val2,val3])}")
print(f"std: {np.std([val1,val2,val3])}")
# Compute mean and std of those minima
mean_min = np.mean(mins)
std_min = np.std(mins)

print("Lowest values in each list:", mins)
print("Mean of minima:", mean_min)
print("Std of minima:", std_min)
